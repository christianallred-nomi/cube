import { inDbTimeZone, timeSeries, isPredefinedGranularity, timeSeriesFromCustomInterval } from '../src';

describe('time', () => {
  it('time series - day', () => {
    expect(timeSeries('day', ['2021-01-01', '2021-01-02'])).toEqual([
      ['2021-01-01T00:00:00.000', '2021-01-01T23:59:59.999'],
      ['2021-01-02T00:00:00.000', '2021-01-02T23:59:59.999']
    ]);

    expect(timeSeries('day', ['2021-01-01', '2021-01-02'], { timestampPrecision: 6 })).toEqual([
      ['2021-01-01T00:00:00.000000', '2021-01-01T23:59:59.999999'],
      ['2021-01-02T00:00:00.000000', '2021-01-02T23:59:59.999999']
    ]);
  });

  it('time series - quarter', () => {
    expect(timeSeries('quarter', ['2021-01-01', '2021-12-31'])).toEqual([
      ['2021-01-01T00:00:00.000', '2021-03-31T23:59:59.999'],
      ['2021-04-01T00:00:00.000', '2021-06-30T23:59:59.999'],
      ['2021-07-01T00:00:00.000', '2021-09-30T23:59:59.999'],
      ['2021-10-01T00:00:00.000', '2021-12-31T23:59:59.999'],
    ]);

    expect(timeSeries('quarter', ['2021-01-01', '2021-12-31'], { timestampPrecision: 6 })).toEqual([
      ['2021-01-01T00:00:00.000000', '2021-03-31T23:59:59.999999'],
      ['2021-04-01T00:00:00.000000', '2021-06-30T23:59:59.999999'],
      ['2021-07-01T00:00:00.000000', '2021-09-30T23:59:59.999999'],
      ['2021-10-01T00:00:00.000000', '2021-12-31T23:59:59.999999'],
    ]);
  });

  it('time series - custom: interval - 1 year, no offset', () => {
    expect(timeSeriesFromCustomInterval('1 year', ['2021-01-01', '2023-12-31'])).toEqual([
      ['2021-01-01T00:00:00.000', '2021-12-31T23:59:59.999'],
      ['2022-01-01T00:00:00.000', '2022-12-31T23:59:59.999'],
      ['2023-01-01T00:00:00.000', '2023-12-31T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 1 year, offset - 2 month', () => {
    expect(timeSeriesFromCustomInterval('1 year', ['2021-01-01', '2022-12-31'], '2 month')).toEqual([
      ['2020-03-01T00:00:00.000', '2021-02-28T23:59:59.999'],
      ['2021-03-01T00:00:00.000', '2022-02-28T23:59:59.999'],
      ['2022-03-01T00:00:00.000', '2023-02-28T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 1 year, offset - 2 month 14 days', () => {
    expect(timeSeriesFromCustomInterval('1 year', ['2021-01-01', '2022-12-31'], '2 month 14 days')).toEqual([
      ['2020-03-15T00:00:00.000', '2021-03-14T23:59:59.999'],
      ['2021-03-15T00:00:00.000', '2022-03-14T23:59:59.999'],
      ['2022-03-15T00:00:00.000', '2023-03-14T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 2 months, no offset', () => {
    expect(timeSeriesFromCustomInterval('2 months', ['2021-01-01', '2021-12-31'])).toEqual([
      ['2021-01-01T00:00:00.000', '2021-02-28T23:59:59.999'],
      ['2021-03-01T00:00:00.000', '2021-04-30T23:59:59.999'],
      ['2021-05-01T00:00:00.000', '2021-06-30T23:59:59.999'],
      ['2021-07-01T00:00:00.000', '2021-08-31T23:59:59.999'],
      ['2021-09-01T00:00:00.000', '2021-10-31T23:59:59.999'],
      ['2021-11-01T00:00:00.000', '2021-12-31T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 2 months, offset - 2 month 14 days', () => {
    expect(timeSeriesFromCustomInterval('2 months', ['2021-01-01', '2021-12-31'], '2 month 14 days')).toEqual([
      ['2020-11-15T00:00:00.000', '2021-01-14T23:59:59.999'],
      ['2021-01-15T00:00:00.000', '2021-03-14T23:59:59.999'],
      ['2021-03-15T00:00:00.000', '2021-05-14T23:59:59.999'],
      ['2021-05-15T00:00:00.000', '2021-07-14T23:59:59.999'],
      ['2021-07-15T00:00:00.000', '2021-09-14T23:59:59.999'],
      ['2021-09-15T00:00:00.000', '2021-11-14T23:59:59.999'],
      ['2021-11-15T00:00:00.000', '2022-01-14T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 1 months 2 weeks 3 days, offset - 3 weeks 4 days', () => {
    expect(timeSeriesFromCustomInterval('1 months 2 weeks 3 days', ['2021-01-01', '2021-12-31'], '3 weeks 4 days')).toEqual([
      ['2020-12-09T00:00:00.000', '2021-01-25T23:59:59.999'],
      ['2021-01-26T00:00:00.000', '2021-03-14T23:59:59.999'],
      ['2021-03-15T00:00:00.000', '2021-05-01T23:59:59.999'],
      ['2021-05-02T00:00:00.000', '2021-06-18T23:59:59.999'],
      ['2021-06-19T00:00:00.000', '2021-08-04T23:59:59.999'],
      ['2021-08-05T00:00:00.000', '2021-09-21T23:59:59.999'],
      ['2021-09-22T00:00:00.000', '2021-11-07T23:59:59.999'],
      ['2021-11-08T00:00:00.000', '2021-12-24T23:59:59.999'],
      ['2021-12-25T00:00:00.000', '2022-02-10T23:59:59.999'],
    ]);
  });

  it('time series - custom: interval - 3 weeks, negative offset - -3 weeks 4 days', () => {
    expect(timeSeriesFromCustomInterval('3 weeks', ['2021-01-01', '2021-03-01'], '-3 weeks 4 days')).toEqual([
      ['2020-12-15T00:00:00.000', '2021-01-04T23:59:59.999'],
      ['2021-01-05T00:00:00.000', '2021-01-25T23:59:59.999'],
      ['2021-01-26T00:00:00.000', '2021-02-15T23:59:59.999'],
      ['2021-02-16T00:00:00.000', '2021-03-08T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 3 weeks, big offset - 9 months', () => {
    expect(timeSeriesFromCustomInterval('3 weeks', ['2021-01-01', '2021-03-01'], '9 months')).toEqual([
      ['2021-01-01T00:00:00.000', '2021-01-21T23:59:59.999'],
      ['2021-01-22T00:00:00.000', '2021-02-11T23:59:59.999'],
      ['2021-02-12T00:00:00.000', '2021-03-04T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 3 weeks, big offset - 10 months', () => {
    expect(timeSeriesFromCustomInterval('3 weeks', ['2021-01-01', '2021-03-01'], '10 months')).toEqual([
      ['2020-12-21T00:00:00.000', '2021-01-10T23:59:59.999'],
      ['2021-01-11T00:00:00.000', '2021-01-31T23:59:59.999'],
      ['2021-02-01T00:00:00.000', '2021-02-21T23:59:59.999'],
      ['2021-02-22T00:00:00.000', '2021-03-14T23:59:59.999']
    ]);
  });

  it('time series - custom: interval - 2 months 3 weeks 4 days 5 hours 6 minutes 7 seconds, no offset', () => {
    expect(timeSeriesFromCustomInterval('2 months 3 weeks 4 days 5 hours 6 minutes 7 seconds', ['2021-01-01', '2021-12-31'])).toEqual([
      ['2021-01-01T00:00:00.000', '2021-03-26T05:06:06.999'],
      ['2021-03-26T05:06:07.000', '2021-06-20T10:12:13.999'],
      ['2021-06-20T10:12:14.000', '2021-09-14T15:18:20.999'],
      ['2021-09-14T15:18:21.000', '2021-12-09T20:24:27.999'],
      ['2021-12-09T20:24:28.000', '2022-03-07T01:30:34.999']
    ]);
  });

  it('time series - custom: interval - 2 months 3 weeks 4 days 5 hours 6 minutes 7 seconds, offset - 2 months 3 weeks 4 days 5 hours 6 minutes 8 seconds', () => {
    expect(timeSeriesFromCustomInterval('2 months 3 weeks 4 days 5 hours 6 minutes 7 seconds', ['2021-01-01', '2021-12-31'], '2 months 3 weeks 4 days 5 hours 6 minutes 8 seconds')).toEqual([
      ['2020-10-06T18:53:54.000', '2021-01-01T00:00:00.999'],
      ['2021-01-01T00:00:01.000', '2021-03-26T05:06:07.999'],
      ['2021-03-26T05:06:08.000', '2021-06-20T10:12:14.999'],
      ['2021-06-20T10:12:15.000', '2021-09-14T15:18:21.999'],
      ['2021-09-14T15:18:22.000', '2021-12-09T20:24:28.999'],
      ['2021-12-09T20:24:29.000', '2022-03-07T01:30:35.999']
    ]);
  });

  it('inDbTimeZone', () => {
    expect(inDbTimeZone('UTC', 'YYYY-MM-DD[T]HH:mm:ss.SSSSSS[Z]', '2020-01-01T00:00:00.000000')).toEqual(
      '2020-01-01T00:00:00.000000Z'
    );
  });

  it('isPredefinedGranularity', () => {
    expect(isPredefinedGranularity('day')).toBeTruthy();
    expect(isPredefinedGranularity('fiscal_year_by_1st_feb')).toBeFalsy();
  });
});
